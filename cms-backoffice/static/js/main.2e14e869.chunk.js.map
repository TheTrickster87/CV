{"version":3,"sources":["Previews/PreviewTitleInput.js","Previews/ImagePreview.js","Elements.js","Column.js","Container.js","Modals/SuggestedLayout.js","Modals/ChooseElement.js","Modals/EditorConvertToHTML.js","Modals/InputText.js","Modals/TitleText.js","Modals/InsertImage.js","ModalManager.js","utils.js","App.js","index.js"],"names":["PreviewTitleInput","url","this","props","img","className","alt","src","title","onClick","info","selectTitle","selectText","copyColumnElements","deleteColumnElements","text","slice","React","Component","ImagePreview","selectModal","onError","e","target","onerror","Elements","del","manageColumnElements","operation","indexContainer","indexColonna","indexElement","indexElements","copy","selectedModal","context","arrow","classNames","name","putTitle","type","swap","FractSquare","squarestyle","fract","activefract","setFract","FractSelection","children","Column","state","showFractSelect","prevProps","setState","value","console","log","manageColumn","index","style","buttonColumn","Elem","i","push","key","openFractMenu","data","handleFract","Header","rounded","isOpen","id","placeholder","manageContainer","Body","Colonne","containerInfo","column","Container","layout","choosedLayout","action","SuggestedLayout","setLayout","closeModal","IconElement","modalInfo","ChooseElement","EditorConvertToHTML","editorState","wrapperClassName","editorClassName","onEditorStateChange","disabled","draftToHtml","convertToRaw","getCurrentContent","InputText","EditorState","createEmpty","field","createWithContent","ContentState","createFromBlockArray","htmlToDraft","add","draftToMarkdown","update","button","updateSend","Hbutton","choosen","handleHbutton","TitleText","handleNameChange","event","htype","array","Hbuttons","renderButton","onChange","InsertImage","ModalManager","a","modal","chooseModal","modalSelected","clone","source","descriptor","Object","getOwnPropertyDescriptor","String","Array","prototype","Reflect","getPrototypeOf","cloneObject","setPrototypeOf","defineProperty","StartingPage","App","displayChooseLayout","displayChooseElement","showModal","container","JSON","stringify","splice","parseInt","length","item","split","obj","map","element","open","array2","contenitore","containers","renderContainer","newContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e14e869.chunk.js","sourcesContent":["import React from \"react\";\n/* import classNames from \"classnames\"; */\n\nclass PreviewTitleInput extends React.Component {\n  render() {\n    let url = \"./Img/icon/\" + this.props.img;\n    return (\n      <div className=\"border border-gray-200 shadow-md\">\n        <div className=\"flex justify-between\">\n          <div className=\"bg-gray-200 border border-gray-500 px-2 py-1 flex items-center justify-center\">\n            <img className=\"w-4 h-4 mr-0 md:mr-2\" alt=\"icon\" src={url} />\n            <span className=\"hidden md:block\">{this.props.title}</span>\n          </div>\n          <div className=\"flex\">\n            {this.props.title === \"Titolo\" ? (\n              <button\n                onClick={info => this.props.selectTitle()}\n                className=\"bg-gray-200 hover:bg-gray-500 w-6 h-6 flex items-center border border-gray-600  justify-center\"\n              >\n                <img\n                  className=\"w-3 opacity-50\"\n                  src=\"./Img/icon/modify.png\"\n                  alt=\"modify\"\n                />\n              </button>\n            ) : (\n              <button\n                onClick={info => this.props.selectText()}\n                className=\"bg-gray-200 hover:bg-gray-500 w-6 h-6 flex items-center border border-gray-600  justify-center\"\n              >\n                <img\n                  className=\"w-3 opacity-50\"\n                  src=\"./Img/icon/modify.png\"\n                  alt=\"modify\"\n                />\n              </button>\n            )}\n            <button\n              onClick={info => this.props.copyColumnElements()}\n              className=\"bg-gray-200 hover:bg-gray-500 w-6 h-6 flex items-center border border-gray-600  justify-center\"\n            >\n              <img\n                className=\"w-3 opacity-50\"\n                src=\"./Img/icon/copy_black.png\"\n                alt=\"copy\"\n              />\n            </button>\n            <button\n              onClick={() => this.props.deleteColumnElements()}\n              className=\"bg-gray-200 hover:bg-gray-500 w-6 h-6 flex items-center border border-gray-600  justify-center\"\n            >\n              <img\n                className=\"w-3 opacity-50\"\n                src=\"./Img/icon/bin_black.png\"\n                alt=\"bin\"\n              />\n            </button>\n          </div>\n        </div>\n        <div className=\"mt-2\">\n          <div className=\" flex flex-col items-center justify-center  p-1 \">\n            <span className=\"text-gray-600 text-xs md:text-base lg:text-xl italic\">\n              {this.props.text.slice(0, 140)} ...\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreviewTitleInput;\n","import React from \"react\";\n\nclass ImagePreview extends React.Component {\n  render() {\n    return (\n      <div className=\"border border-gray-200 shadow-md\">\n        <div className=\"flex justify-between\">\n          <div className=\"bg-gray-200 border border-gray-500 px-2 py-1 flex\">\n            <img\n              className=\"w-4 mr-0 md:mr-2\"\n              src=\"./Img/icon/picture_black.svg\"\n              alt=\"placeholder\"\n            />\n            <span className=\"hidden md:block\">Immagine</span>\n          </div>\n          <div className=\"flex\">\n            <button\n              onClick={info => this.props.selectModal()}\n              className=\"bg-gray-200 hover:bg-gray-500 w-6 h-6 flex items-center border border-gray-600  justify-center\"\n            >\n              <img\n                className=\"w-3 opacity-50\"\n                src=\"./Img/icon/modify.png\"\n                alt=\"modify\"\n              />\n            </button>\n            <button\n              onClick={info => this.props.copyColumnElements()}\n              className=\"bg-gray-200 hover:bg-gray-500 w-6 h-6 flex items-center border border-gray-600  justify-center\"\n            >\n              <img\n                className=\"w-3 opacity-50\"\n                src=\"./Img/icon/copy_black.png\"\n                alt=\"copy\"\n              />\n            </button>\n            <button\n              onClick={() => this.props.deleteColumnElements()}\n              className=\"bg-gray-200 hover:bg-gray-500 w-6 h-6 flex items-center border border-gray-600  justify-center\"\n            >\n              <img\n                className=\"w-3 opacity-50\"\n                src=\"./Img/icon/bin_black.png\"\n                alt=\"bin\"\n              />\n            </button>\n          </div>\n        </div>\n        <div className=\"mt-2\">\n          <div className=\"relative flex flex-col items-center justify-center  p-1 \">\n            <div className=\"imagePreview max-w-48 w-auto h-auto max-h-48 flex flex-col  items-center justify-center px-3\">\n              <img\n                className=\"w-full\"\n                src={this.props.url}\n                alt=\"ref\"\n                onError={e => {\n                  e.target.onerror = null;\n                  e.target.src = \"./Img/icon/picture_black.svg\";\n                }}\n              />\n              <div className=\"hidden sm:block absolute bottom-0 break-all px-2 py-1 mb-1   text-gray-800 text-xs md:text-base lg:text-xl italic\">\n                <span className=\"absolute w-full h-full bg-blue-200 left-0 bottom-0 z-0 opacity-50 \"></span>\n                <div className=\" relative z-20\">{this.props.url}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImagePreview;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PreviewTitleInput from \"./Previews/PreviewTitleInput.js\";\nimport ImagePreview from \"./Previews/ImagePreview.js\";\n\nclass Elements extends React.Component {\n  putTitle(info) {\n    const del = info =>\n      this.props.manageColumnElements({\n        operation: \"delete\",\n        indexContainer: this.props.indexContainer,\n        indexColonna: this.props.indexColonna,\n        indexElement: this.props.indexElements\n      });\n    const copy = info =>\n      this.props.manageColumnElements({\n        operation: \"copy\",\n        indexContainer: this.props.indexContainer,\n        indexColonna: this.props.indexColonna,\n        indexElement: this.props.indexElements\n      });\n    switch (info) {\n      case \"InputText\":\n        return (\n          <PreviewTitleInput\n            deleteColumnElements={del}\n            copyColumnElements={copy}\n            selectText={info =>\n              this.props.selectModal({\n                selectedModal: \"Blocco di testo\",\n                info: {\n                  indexContainer: this.props.indexContainer,\n                  indexColonna: this.props.indexColonna,\n                  indexElement: this.props.indexElements,\n                  info: this.props.context\n                }\n              })\n            }\n            title=\"Testo\"\n            img=\"text.png\"\n            text={this.props.context.text}\n          />\n        );\n      case \"TitleText\":\n        return (\n          <PreviewTitleInput\n            deleteColumnElements={del}\n            copyColumnElements={copy}\n            selectTitle={info =>\n              this.props.selectModal({\n                selectedModal: \"Titolo\",\n                info: {\n                  indexContainer: this.props.indexContainer,\n                  indexColonna: this.props.indexColonna,\n                  indexElement: this.props.indexElements,\n                  info: this.props.context\n                }\n              })\n            }\n            title=\"Titolo\"\n            img=\"title.svg\"\n            text={this.props.context.text}\n          />\n        );\n      case \"InsertImage\":\n        return (\n          <ImagePreview\n            selectModal={info =>\n              this.props.selectModal({\n                selectedModal: \"Immagine\",\n                info: {\n                  indexContainer: this.props.indexContainer,\n                  indexColonna: this.props.indexColonna,\n                  indexElement: this.props.indexElements,\n                  info: this.props.context\n                }\n              })\n            }\n            deleteColumnElements={del}\n            copyColumnElements={copy}\n            url={this.props.context.url}\n          />\n        );\n      default:\n    }\n  }\n  render() {\n    let arrow = classNames({\n      \"w-6 h-6 hover:opacity-100 cursor-pointer opacity-75 p-1  flex items-center justify-center\": true\n    });\n    let name = this.putTitle(this.props.context.type);\n    return (\n      <div className=\"mb-3 relative\">\n        <div className=\"absolute h-full flex justify-center items-center nav-arrow\">\n          <div className=\"flex flex-col\">\n            <div\n              onClick={info =>\n                this.props.manageColumnElements({\n                  indexContainer: this.props.indexContainer,\n                  indexColonna: this.props.indexColonna,\n                  indexElement: this.props.indexElements,\n                  operation: \"swap\",\n                  swap: \"before\"\n                })\n              }\n              className={arrow}\n            >\n              <img\n                className=\"w-3 opacity-50\"\n                src=\"./Img/icon/arrow_up.png\"\n                alt=\"arrow left\"\n              />\n            </div>\n\n            <div\n              onClick={info =>\n                this.props.manageColumnElements({\n                  indexContainer: this.props.indexContainer,\n                  indexColonna: this.props.indexColonna,\n                  indexElement: this.props.indexElements,\n                  operation: \"swap\",\n                  swap: \"after\"\n                })\n              }\n              className={arrow}\n            >\n              <img\n                className=\"w-3 opacity-50\"\n                src=\"./Img/icon/arrow_down.png\"\n                alt=\"arrow right\"\n              />\n            </div>\n          </div>\n        </div>\n        {name}\n      </div>\n    );\n  }\n}\nexport default Elements;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport Elements from \"./Elements.js\";\n\nclass FractSquare extends React.Component {\n  render() {\n    let squarestyle = classNames({\n      \"border cursor-pointer border-gray-300 hover:bg-blue-300 bg-white w-8 h-8 flex items-center justify-center\": true,\n      \"bg-blue-300 hiver:bg-blue-400\":\n        this.props.fract === this.props.activefract\n    });\n    return (\n      <div\n        onClick={() => this.props.setFract(this.props.fract)}\n        className={squarestyle}\n      >\n        {this.props.fract}\n      </div>\n    );\n  }\n}\n\nclass FractSelection extends React.Component {\n  render() {\n    return (\n      <div className=\"absolute flex left-0 top-0 bg-red-300 z-10\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass Column extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fract: null,\n      showFractSelect: false\n    };\n  }\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.fract !== prevProps.fract) {\n      this.setState({ fract: this.props.fract });\n    }\n  }\n\n  handleFract(value) {\n    console.log(\"ho chiamato handleFract per cambiare il valore della colonna\");\n    this.props.manageColumn({\n      indexContainer: this.props.indexContainer,\n      indexColonna: this.props.index,\n      value: value,\n      operation: \"update\"\n    });\n    this.setState({\n      fract: value\n    });\n  }\n\n  openFractMenu() {\n    this.setState({\n      showFractSelect: !this.state.showFractSelect\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      fract: this.props.fract\n    });\n  }\n\n  render() {\n    let value = this.state.fract === \"1/1\" ? \"full\" : this.state.fract;\n    let style = classNames({\n      [`w-${value}`]: true\n    });\n\n    let buttonColumn = classNames({\n      \"w-6 h-6 hover:bg-gray-500 cursor-pointer  bg-gray-200 p-1 border-b border-r border-gray-600 flex items-center justify-center\": true\n    });\n    let arrow = classNames({\n      \"w-6 h-6 hover:opacity-100 cursor-pointer opacity-75 p-1  flex items-center justify-center\": true\n    });\n    let Elem = [];\n    for (let i in this.props.context) {\n      Elem.push(\n        <Elements\n          key={i}\n          indexContainer={this.props.indexContainer}\n          indexColonna={this.props.index}\n          indexElements={i}\n          manageColumnElements={info => this.props.manageColumnElements(info)}\n          selectModal={info => this.props.selectModal(info)}\n          context={this.props.context[i]}\n        />\n      );\n    }\n    return (\n      <div className={style}>\n        <div className=\" sm:p-2\">\n          <div className=\"border border-gray-400\">\n            <div className=\"flex flex-col sm:flex-row items-center justify-between\">\n              <div className=\"flex\">\n                <div\n                  onClick={() => this.openFractMenu()}\n                  className=\"w-6 h-6 relative hover:bg-gray-500 cursor-pointer  bg-gray-200 p-1 border-b border-r border-gray-600 flex items-center justify-center\"\n                >\n                  {this.state.fract}\n                  {this.state.showFractSelect ? (\n                    <FractSelection>\n                      <div>\n                        <div className=\"flex\">\n                          <FractSquare\n                            fract=\"1/6\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"1/5\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"1/4\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"1/3\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"2/5\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"1/2\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                        </div>\n                        <div className=\"flex\">\n                          <FractSquare\n                            fract=\"3/5\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"2/3\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"3/4\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"4/5\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"5/6\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                          <FractSquare\n                            fract=\"1/1\"\n                            activefract={this.state.fract}\n                            setFract={data => this.handleFract(data)}\n                          />\n                        </div>\n                      </div>\n                    </FractSelection>\n                  ) : null}\n                </div>\n                <div\n                  onClick={info =>\n                    this.props.manageColumn({\n                      indexContainer: this.props.indexContainer,\n                      indexColonna: this.props.index,\n                      operation: \"copy\"\n                    })\n                  }\n                  className={buttonColumn}\n                >\n                  <img\n                    className=\"w-3 opacity-50\"\n                    src=\"./Img/icon/copy_black.png\"\n                    alt=\"copy\"\n                  />\n                </div>\n\n                <div\n                  onClick={info =>\n                    this.props.manageColumn({\n                      indexContainer: this.props.indexContainer,\n                      indexColonna: this.props.index,\n                      operation: \"delete\"\n                    })\n                  }\n                  className={buttonColumn}\n                >\n                  <img\n                    className=\"w-3 opacity-50\"\n                    src=\"./Img/icon/bin_black.png\"\n                    alt=\"bin\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex\">\n                <div\n                  onClick={info =>\n                    this.props.manageColumn({\n                      indexContainer: this.props.indexContainer,\n                      indexColonna: this.props.index,\n                      operation: \"swap\",\n                      swap: \"before\"\n                    })\n                  }\n                  className={arrow}\n                >\n                  <img\n                    className=\"w-3 opacity-50\"\n                    src=\"./Img/icon/arrow_left.png\"\n                    alt=\"arrow left\"\n                  />\n                </div>\n\n                <div\n                  onClick={info =>\n                    this.props.manageColumn({\n                      indexContainer: this.props.indexContainer,\n                      indexColonna: this.props.index,\n                      operation: \"swap\",\n                      swap: \"after\"\n                    })\n                  }\n                  className={arrow}\n                >\n                  <img\n                    className=\"w-3 opacity-50\"\n                    src=\"./Img/icon/arrow_right.png\"\n                    alt=\"arrow right\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"p-4\">\n              {Elem}\n              <div\n                onClick={info =>\n                  this.props.selectModal({\n                    selectedModal: \"ChooseElement\",\n                    info: {\n                      indexContainer: this.props.indexContainer,\n                      indexColonna: this.props.index\n                    }\n                  })\n                }\n                className=\"cursor-pointer flex flex-col border-dashed border border-gray-500 p-1 flex items-center justify-center\"\n              >\n                <span className=\"text-gray-600 text-xs md:text-base lg:text-xl\">\n                  <span className=\"font-bold text-xl\">+</span> Aggiungere una\n                  classe all'elemento wrapping HTML\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Column;\n","import React from \"react\";\nimport Column from \"./Column.js\";\nimport classNames from \"classnames\";\n\nclass Header extends React.Component {\n  render() {\n    const style = classNames({\n      \"bg-blue-500 flex justify-between shadow-lg \": true,\n      rounded: !this.props.isOpen,\n      \"border-b border-blue-900\": this.props.isOpen\n    });\n    const arrow = classNames({\n      \"w-4 \": true,\n      \"arrow-up\": !this.props.isOpen,\n      \"arrow-down\": this.props.isOpen\n    });\n    return (\n      <div className={style}>\n        <div className=\"p-1\">\n          <input\n            className=\"shadow rounded appearance-none border py-2 px-3 text-gray-500 leading-tight focus:outline-none focus:shadow-outline focus:bg-white\"\n            id=\"cognome\"\n            type=\"text\"\n            placeholder=\"Contenitore\"\n          />\n        </div>\n        <div className=\"flex\">\n          <ul className=\"flex\">\n            <li\n              onClick={info =>\n                this.props.manageContainer({\n                  indexContainer: this.props.index,\n                  operation: \"copy\"\n                })\n              }\n              className=\"shadow bg-blue-800 cursor-pointer flex w-12 justify-center items-center py-2 px-3 mr-1 hover:bg-blue-700\"\n            >\n              <div className=\"\">\n                <img\n                  className=\"w-6\"\n                  src=\"./Img/icon/copy_white.png\"\n                  alt=\"bin\"\n                />\n              </div>\n            </li>\n            <li\n              onClick={info =>\n                this.props.manageContainer({\n                  indexContainer: this.props.index,\n                  operation: \"delete\"\n                })\n              }\n              className=\"shadow bg-blue-800 cursor-pointer flex w-12 justify-center items-center py-2 px-3 mr-1 hover:bg-blue-700\"\n            >\n              <div className=\"\">\n                <img className=\"w-6\" src=\"./Img/icon/bin_white.png\" alt=\"bin\" />\n              </div>\n            </li>\n            <li\n              onClick={info =>\n                this.props.manageContainer({\n                  indexContainer: this.props.index,\n                  operation: \"open\"\n                })\n              }\n              className=\"shadow bg-blue-800 cursor-pointer w-12 flex items-center justify-center  py-2 px-3 hover:bg-blue-700\"\n            >\n              <div className=\"\">\n                <img\n                  className={arrow}\n                  src=\"./Img/arrow_down_white.png\"\n                  alt=\"arrow down\"\n                />\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Body extends React.Component {\n  render() {\n    const style = classNames({\n      \"bg-white  text-center border border-gray-400\": true,\n      \"container-closed\": !this.props.isOpen,\n      \"pb-2 container-open\": this.props.isOpen\n    });\n\n    let Colonne = [];\n    for (let i in this.props.containerInfo.column) {\n      /*  console.log(\"array di valori:\" + this.props.containerInfo.column[i]); */\n      Colonne.push(\n        <Column\n          key={i}\n          indexContainer={this.props.indexContainer}\n          selectModal={info => this.props.selectModal(info)}\n          manageColumn={info => this.props.manageColumn(info)}\n          manageColumnElements={info => this.props.manageColumnElements(info)}\n          fract={this.props.containerInfo.column[i].fract}\n          context={this.props.containerInfo.column[i].context}\n          index={i}\n        />\n      );\n    }\n\n    return (\n      <div className={style}>\n        <div className=\"py-4 px-4\">\n          <span className=\"text-gray-500 \">\n            Per aggiungere elementi, è innanzitutto necessario aggiungere una\n            colonna\n          </span>\n\n          <div className=\"flex flex-wrap\">\n            {/* QUI INSERIRO' LE VARIE COLONNE DEL MIO CONTENITORE*/}\n            {Colonne}\n          </div>\n        </div>\n        <div className=\"flex justify-end\">\n          <button\n            onClick={() =>\n              this.props.selectModal({ selectedModal: \"SuggestedLayout\" })\n            }\n            className=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded mr-1\"\n          >\n            + Contenitore\n          </button>\n          <button\n            onClick={info =>\n              this.props.manageColumn({\n                indexContainer: this.props.indexContainer,\n                operation: \"add\"\n              })\n            }\n            className=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded mr-1\"\n          >\n            + Colonna\n          </button>\n          <button></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: \"1/1\"\n    };\n  }\n  componentDidMount() {\n    let layout = this.props.choosedLayout ? this.props.choosedLayout : \"1/1\";\n    this.setState({\n      column: layout\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.containerInfo.column !== prevProps.containerInfo.column) {\n      this.setState({ column: this.props.containerInfo.column });\n    }\n  }\n\n  // funzione per gestire le colonne del container, per aggiungerle/toglierle etc\n  handleColumn(index, value, action) {}\n\n  render() {\n    return (\n      <div className=\"mt-4 \">\n        <Header\n          isOpen={this.props.isOpen}\n          containerInfo={this.props.containerInfo}\n          manageContainer={info => this.props.manageContainer(info)}\n          index={this.props.index}\n        />\n        <Body\n          isOpen={this.props.isOpen}\n          manageColumn={info => this.props.manageColumn(info)}\n          manageColumnElements={info => this.props.manageColumnElements(info)}\n          indexContainer={this.props.index}\n          containerInfo={this.props.containerInfo}\n          selectModal={info => this.props.selectModal(info)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\n\nclass SuggestedLayout extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"rounded z-50 absolute p-4 left-0 w-full\">\n          <div className=\"p-4 bg-gray-700 rounded\">\n            <div className=\"mt-2\">\n              <h1 className=\"text-white text-center\">\n                Scegli il layout di partenza ..\n              </h1>\n              <div className=\"mt-2 grid-lista  text-white\">\n                <div\n                  onClick={() => this.props.setLayout(\"full\")}\n                  className=\"cursor-pointer h-20 border-dashed border border-gray-500 p-1 \"\n                >\n                  <div className=\"bg-white h-full\"> </div>\n                </div>\n\n                <div\n                  onClick={() => this.props.setLayout(\"1/1\")}\n                  className=\"cursor-pointer  h-20 border-dashed border border-gray-500 p-1\"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center\">\n                    1/1\n                  </div>\n                </div>\n\n                <div\n                  onClick={() => this.props.setLayout(\"1/2,1/2\")}\n                  className=\"cursor-pointer  h-20 border-dashed border border-gray-500 p-1 flex \"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/2 mr-1\">\n                    1/2\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/2\">\n                    1/2\n                  </div>\n                </div>\n                <div\n                  onClick={() => this.props.setLayout(\"1/3,1/3,1/3\")}\n                  className=\"cursor-pointer h-20 border-dashed border border-gray-500 p-1 flex\"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/3 mr-1\">\n                    1/3\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/3 mr-1\">\n                    1/3\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/3 \">\n                    1/3\n                  </div>\n                </div>\n\n                {/*#########  Seconda Riga  #####################  */}\n\n                <div\n                  onClick={() => this.props.setLayout(\"2/3,1/3\")}\n                  className=\"cursor-pointer h-20 border-dashed border border-gray-500 p-1 flex\"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-2/3 mr-1\">\n                    2/3\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/3\">\n                    1/3\n                  </div>\n                </div>\n\n                <div\n                  onClick={() => this.props.setLayout(\"1/3,2/3\")}\n                  className=\"cursor-pointer  h-20 border-dashed border border-gray-500 p-1 flex\"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/3 mr-1\">\n                    1/3\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-2/3\">\n                    2/3\n                  </div>\n                </div>\n\n                <div\n                  onClick={() => this.props.setLayout(\"1/4,3/4\")}\n                  className=\"cursor-pointer  h-20 border-dashed border border-gray-500 p-1 flex \"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4 mr-1\">\n                    1/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-3/4\">\n                    3/4\n                  </div>\n                </div>\n\n                <div\n                  onClick={() => this.props.setLayout(\"3/4,1/4\")}\n                  className=\"cursor-pointer h-20 border-dashed border border-gray-500 p-1 flex\"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-3/4 mr-1\">\n                    3/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4\">\n                    1/4\n                  </div>\n                </div>\n\n                {/*#########  Terza Riga  #####################  */}\n                <div\n                  onClick={() => this.props.setLayout(\"1/2,1/4,1/4\")}\n                  className=\"cursor-pointer h-20 border-dashed border border-gray-500 p-1 flex\"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/2 mr-1\">\n                    1/2\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4 mr-1\">\n                    1/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4\">\n                    1/4\n                  </div>\n                </div>\n\n                <div\n                  onClick={() => this.props.setLayout(\"1/4,1/4,1/2\")}\n                  className=\"cursor-pointer  h-20 border-dashed border border-gray-500 p-1 flex\"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4 mr-1\">\n                    1/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4 mr-1\">\n                    1/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/2\">\n                    1/2\n                  </div>\n                </div>\n\n                <div\n                  onClick={() => this.props.setLayout(\"1/4,1/2,1/4\")}\n                  className=\"cursor-pointer  h-20 border-dashed border border-gray-500 p-1 flex \"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4 mr-1\">\n                    1/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/2 mr-1\">\n                    1/2\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4\">\n                    1/4\n                  </div>\n                </div>\n\n                <div\n                  onClick={() => this.props.setLayout(\"1/4,1/4,1/4,1/4\")}\n                  className=\"cursor-pointer h-20 border-dashed border border-gray-500 p-1 flex\"\n                >\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4 mr-1\">\n                    1/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4 mr-1\">\n                    1/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4 mr-1\">\n                    1/4\n                  </div>\n                  <div className=\"bg-gray-600 h-full flex items-center justify-center w-1/4\">\n                    1/4\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex justify-end\">\n              <button\n                onClick={() => this.props.closeModal()}\n                className=\"mt-4 bg-white hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n              >\n                Annulla\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SuggestedLayout;\n","import React from \"react\";\n\nclass IconElement extends React.Component {\n  render() {\n    let url = \"./Img/icon/\" + this.props.url;\n    return (\n      <div\n        onClick={info =>\n          this.props.selectModal({\n            selectedModal: this.props.text,\n            info: this.props.modalInfo\n          })\n        }\n        className=\"p-2 cursor-pointer border border-gray-700 font-bold flex items-center shadow-lg\"\n      >\n        <img className=\"w-6\" src={url} alt={this.props.text} />\n        <h1 className=\"ml-2\">{this.props.text}</h1>\n      </div>\n    );\n  }\n}\n\nclass ChooseElement extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"rounded z-50 absolute p-4 left-0 w-full\">\n          <div className=\"\">\n            <div className=\"bg-blue-500 py-2 border-b border-blue-600 shadow-lg\">\n              <h1 className=\"text-white text-center font-bold uppercase \">\n                Seleziona un elemento\n              </h1>\n            </div>\n            <div className=\"rounded-b bg-white p-4 \">\n              <div className=\"mt-2\">\n                <div className=\"mt-2 grid-elements  text-black\">\n                  <IconElement\n                    modalInfo={this.props.modalInfo}\n                    selectModal={info => this.props.selectModal(info)}\n                    text=\"Immagine\"\n                    url=\"picture_black.svg\"\n                  />\n                  <IconElement\n                    modalInfo={this.props.modalInfo}\n                    selectModal={info => this.props.selectModal(info)}\n                    text=\"Titolo\"\n                    url=\"title.svg\"\n                  />\n                  <IconElement\n                    modalInfo={this.props.modalInfo}\n                    selectModal={info => this.props.selectModal(info)}\n                    text=\"Blocco di testo\"\n                    url=\"text.png\"\n                  />\n                  <IconElement\n                    modalInfo={this.props.modalInfo}\n                    selectModal={info => this.props.selectModal(info)}\n                    text=\"CheckList\"\n                    url=\"checklist_black.svg\"\n                  />\n                  <IconElement\n                    modalInfo={this.props.modalInfo}\n                    selectModal={info => this.props.selectModal(info)}\n                    text=\"Accordion\"\n                    url=\"accordion.png\"\n                  />\n                </div>\n                <div className=\"flex justify-end\">\n                  <button\n                    onClick={() => this.props.closeModal()}\n                    className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n                  >\n                    Annulla\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseElement;\n","import React, { Component } from \"react\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from \"draftjs-to-html\";\n/* import htmlToDraft from \"html-to-draftjs\"; */\n\nclass EditorConvertToHTML extends Component {\n  /*  state = {\n    editorState: EditorState.createEmpty()\n  };\n\n  onEditorStateChange: Function = editorState => {\n    this.setState({\n      editorState\n    });\n  };\n */\n  render() {\n    /*   const { editorState } = this.state; */\n    return (\n      <div>\n        {/*  <Editor\n          editorState={editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.onEditorStateChange}\n        /> */}\n        <Editor\n          editorState={this.props.editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.props.onEditorStateChange}\n        />\n        <textarea\n          className=\"w-full\"\n          disabled\n          value={draftToHtml(\n            convertToRaw(this.props.editorState.getCurrentContent())\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EditorConvertToHTML;\n\n/* \nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editorState: EditorState.createEmpty() };\n    this.onChange = editorState => this.setState({ editorState });\n  }\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"BOLD\"));\n  }\n\n  _onItalicClick() {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, \"ITALIC\")\n    );\n  }\n\n  _onUnderlineClick() {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, \"UNDERLINE\")\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"flex\">\n          <button\n            className=\"text-gray-700 mr-2\"\n            onClick={this._onBoldClick.bind(this)}\n          >\n            <span className=\"text-bold\">Bold</span>\n          </button>\n          <button\n            className=\"text-gray-700 mr-2\"\n            onClick={this._onItalicClick.bind(this)}\n          >\n            <span className=\"italic\">Italic</span>\n          </button>\n          <button\n            className=\"text-gray-700 \"\n            onClick={this._onUnderlineClick.bind(this)}\n          >\n            <span className=\"underline\">Underline</span>\n          </button>\n        </div>\n        <div className=\"shadow appearance-none border h-40 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n          <Editor\n            editorState={this.state.editorState}\n            handleKeyCommand={this.handleKeyCommand}\n            onChange={this.onChange}\n          />\n          <button\n            onClick={() =>\n              console.log(\"lo state:\" + JSON.stringify(this.state))\n            }\n          >\n            state\n          </button>\n        </div>\n        {/* <div className=\"flex justify-between\">\n          <button\n            onClick={info => {\n              this.props.manageColumnElements({\n                operation: \"add\",\n                indexContainer: this.props.modalInfo.indexContainer,\n                indexColonna: this.props.modalInfo.indexColonna,\n                value: {\n                  type: \"InputText\",\n                  value: this.state.value\n                }\n              });\n              this.props.closeModal();\n            }}\n            className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n          >\n            Invia\n          </button>\n          <button\n            onClick={() => this.props.closeModal()}\n            className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n          >\n            Annulla\n          </button>\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default MyEditor;\n */\n","import React from \"react\";\nimport {\n  EditorState,\n  ContentState,\n  convertToRaw\n  /*, convertFromRaw */\n} from \"draft-js\";\n/* import { Editor } from \"react-draft-wysiwyg\"; */\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport draftToMarkdown from \"draftjs-to-markdown\";\nimport EditorConvertToHTML from \"./EditorConvertToHTML.js\";\n\nclass InputText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editorState: EditorState.createEmpty() };\n  }\n\n  onEditorStateChange: Function = editorState => {\n    this.setState({\n      editorState\n    });\n  };\n\n  componentDidMount() {\n    let field = !this.props.modalInfo.info\n      ? EditorState.createEmpty()\n      : EditorState.createWithContent(\n          ContentState.createFromBlockArray(\n            htmlToDraft(this.props.modalInfo.info.value)\n          )\n        );\n    this.setState({\n      editorState: field\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (NEVER forget to compare props):\n    if (this.props.modalInfo.info !== prevProps.modalInfo.info) {\n      this.setState({\n        // Sintassi per convertire una stringa HTML e aggiornare lo state nel Draft\n        editorState: EditorState.createWithContent(\n          ContentState.createFromBlockArray(\n            htmlToDraft(this.props.modalInfo.info.value)\n          )\n        )\n      });\n    }\n  }\n\n  updateSend() {\n    const { editorState } = this.state;\n    const add = (\n      <button\n        onClick={info => {\n          this.props.manageColumnElements({\n            operation: \"add\",\n            indexContainer: this.props.modalInfo.indexContainer,\n            indexColonna: this.props.modalInfo.indexColonna,\n            value: {\n              type: \"InputText\",\n              // da aggiungere per fare il copy\n              value: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n              text: draftToMarkdown(\n                convertToRaw(editorState.getCurrentContent())\n              )\n            }\n          });\n          this.props.closeModal();\n        }}\n        className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n      >\n        Invia\n      </button>\n    );\n\n    const update = (\n      <button\n        onClick={\n          /*   () =>\n            console.log(\n              \"ecco l element index:\" + this.props.modalInfo.indexElement\n            ) */\n          info => {\n            this.props.manageColumnElements({\n              operation: \"update\",\n              indexContainer: this.props.modalInfo.indexContainer,\n              indexColonna: this.props.modalInfo.indexColonna,\n              indexElement: this.props.modalInfo.indexElement,\n              value: {\n                type: \"InputText\",\n                // da aggiungere per fare il copy\n                value: draftToHtml(\n                  convertToRaw(editorState.getCurrentContent())\n                ),\n                text: draftToMarkdown(\n                  convertToRaw(editorState.getCurrentContent())\n                )\n              }\n            });\n            this.props.closeModal();\n          }\n        }\n        className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n      >\n        Aggiorna\n      </button>\n    );\n\n    return !this.props.modalInfo.info ? add : update;\n  }\n\n  render() {\n    const button = this.updateSend();\n    const { editorState } = this.state;\n    return (\n      <div className=\" lg:w-3/4\">\n        <div className=\"\">\n          <div className=\"bg-blue-500 py-2 border-b border-blue-600 shadow-lg\">\n            <h1 className=\"text-white text-center font-bold uppercase \">\n              Inserisci il testo\n            </h1>\n          </div>\n          <div className=\"bg-white p-4\">\n            <div>\n              <EditorConvertToHTML\n                editorState={editorState}\n                onEditorStateChange={this.onEditorStateChange}\n              />\n              <div className=\"flex justify-between\">\n                {button}\n                <button\n                  onClick={() => this.props.closeModal()}\n                  className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n                >\n                  Annulla\n                </button>\n              </div>\n            </div>\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputText;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nclass Hbutton extends React.Component {\n  render() {\n    let style = classNames({\n      \"bg-blue-500 text-white hover:bg-blue-300 font-semibold hover:text-white py-1 mr-2 px-2 border border-blue-500 hover:border-transparent rounded focus:outline-none\":\n        this.props.value === this.props.choosen,\n      \"bg-transparent hover:bg-blue-300 text-blue-400 font-semibold hover:text-white py-1 mr-2 px-2 border border-blue-500 hover:border-transparent rounded focus:outline-none\":\n        this.props.value !== this.props.choosen\n    });\n    return (\n      <button\n        onClick={i => this.props.handleHbutton(this.props.value)}\n        className={style}\n      >\n        H{this.props.value}\n      </button>\n    );\n  }\n}\n\nclass TitleText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", choosen: 1 };\n  }\n\n  componentDidMount() {\n    let field = !this.props.modalInfo.info\n      ? \"\"\n      : this.props.modalInfo.info.text;\n    let index = !this.props.modalInfo.info\n      ? 1\n      : this.props.modalInfo.info.htype;\n    this.setState({\n      value: field,\n      choosen: index\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (NEVER forget to compare props):\n    if (this.props.modalInfo.info !== prevProps.modalInfo.info) {\n      this.setState({\n        value: this.props.modalInfo.info.text,\n        choosen: this.props.modalInfo.info.htype\n      });\n    }\n  }\n\n  handleNameChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleHbutton(i) {\n    this.setState({ choosen: i });\n  }\n\n  renderButton() {\n    let array = [];\n    for (let i = 1; i <= 6; i++) {\n      array.push(\n        <Hbutton\n          key={i}\n          value={i}\n          choosen={this.state.choosen}\n          handleHbutton={i => this.handleHbutton(i)}\n        />\n      );\n    }\n    return array;\n  }\n\n  updateSend() {\n    const add = (\n      <button\n        onClick={info => {\n          this.props.manageColumnElements({\n            operation: \"add\",\n            indexContainer: this.props.modalInfo.indexContainer,\n            indexColonna: this.props.modalInfo.indexColonna,\n            value: {\n              type: \"TitleText\",\n              url: this.state.value,\n              text: this.state.value,\n              htype: this.state.choosen\n            }\n          });\n          this.props.closeModal();\n        }}\n        className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n      >\n        Invia\n      </button>\n    );\n\n    const update = (\n      <button\n        onClick={info => {\n          this.props.manageColumnElements({\n            operation: \"update\",\n            indexContainer: this.props.modalInfo.indexContainer,\n            indexColonna: this.props.modalInfo.indexColonna,\n            indexElement: this.props.modalInfo.indexElement,\n            value: {\n              type: \"TitleText\",\n              text: this.state.value,\n              htype: this.state.choosen\n            }\n          });\n          this.props.closeModal();\n        }}\n        className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n      >\n        Aggiorna\n      </button>\n    );\n    return !this.props.modalInfo.info ? add : update;\n  }\n  render() {\n    const button = this.updateSend();\n    const Hbuttons = this.renderButton();\n    const style = classNames({\n      \"h-40 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\": true,\n      \"text-3xl\": this.state.choosen === 1,\n      \"text-2xl\": this.state.choosen === 2,\n      \"text-xl\": this.state.choosen === 3,\n      \"text-lg\": this.state.choosen === 4,\n      \"text-base\": this.state.choosen === 5,\n      \"text-sm\": this.state.choosen === 6\n    });\n    return (\n      <div className=\"w-full lg:w-3/4\">\n        <div className=\"\">\n          <div className=\"bg-blue-500 py-2 border-b border-blue-600 shadow-lg\">\n            <h1 className=\"text-white text-center font-bold uppercase \">\n              Inserisci il Titolo\n            </h1>\n          </div>\n          <div className=\"bg-white p-4\">\n            <div>\n              <div className=\"flex mb-3\">{Hbuttons}</div>\n              <input\n                className={style}\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleNameChange}\n              />\n              <div className=\"flex justify-between\">\n                {button}\n                {/* <button\n                  onClick={info => {\n                    this.props.manageColumnElements({\n                      operation: \"add\",\n                      indexContainer: this.props.modalInfo.indexContainer,\n                      indexColonna: this.props.modalInfo.indexColonna,\n                      value: {\n                        type: \"TitleText\",\n                        text: this.state.value,\n                        htype: this.state.choosen\n                      }\n                    });\n                    this.props.closeModal();\n                  }}\n                  className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n                >\n                  Invia\n                </button> */}\n                <button\n                  onClick={() => this.props.closeModal()}\n                  className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n                >\n                  Annulla\n                </button>\n              </div>\n            </div>\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TitleText;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nclass InsertImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n  }\n\n  handleNameChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  componentDidMount() {\n    let field = !this.props.modalInfo.info ? \"\" : this.props.modalInfo.info.url;\n    this.setState({\n      value: field\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (NEVER forget to compare props):\n    if (this.props.modalInfo.info !== prevProps.modalInfo.info) {\n      this.setState({ value: this.props.modalInfo.info.url });\n    }\n  }\n  updateSend() {\n    const add = (\n      <button\n        onClick={info => {\n          this.props.manageColumnElements({\n            operation: \"add\",\n            indexContainer: this.props.modalInfo.indexContainer,\n            indexColonna: this.props.modalInfo.indexColonna,\n            value: {\n              type: \"InsertImage\",\n              url: this.state.value\n            }\n          });\n          this.props.closeModal();\n        }}\n        className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n      >\n        Invia\n      </button>\n    );\n\n    const update = (\n      <button\n        onClick={info => {\n          this.props.manageColumnElements({\n            operation: \"update\",\n            indexContainer: this.props.modalInfo.indexContainer,\n            indexColonna: this.props.modalInfo.indexColonna,\n            indexElement: this.props.modalInfo.indexElement,\n            value: {\n              type: \"InsertImage\",\n              url: this.state.value\n            }\n          });\n          this.props.closeModal();\n        }}\n        className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n      >\n        Aggiorna\n      </button>\n    );\n    return !this.props.modalInfo.info ? add : update;\n  }\n\n  render() {\n    const style = classNames({\n      \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\": true\n    });\n    let button = this.updateSend();\n    return (\n      <div className=\"w-full lg:w-3/4\">\n        <div className=\"\">\n          <div className=\"bg-blue-500 py-2 border-b border-blue-600 shadow-lg\">\n            <h1 className=\"text-white text-center font-bold uppercase \">\n              Inserisci l'URL dell'immagine{\" \"}\n            </h1>\n          </div>\n          <div className=\"bg-white p-4\">\n            <div>\n              <input\n                className={style}\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleNameChange}\n              />\n              <div className=\"flex justify-between\">\n                {button}\n                <button\n                  onClick={() => this.props.closeModal()}\n                  className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n                >\n                  Annulla\n                </button>\n              </div>\n            </div>\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InsertImage;\n","import React from \"react\";\nimport SuggestedLayout from \"./Modals/SuggestedLayout.js\";\nimport ChooseElement from \"./Modals/ChooseElement.js\";\nimport InputText from \"./Modals/InputText.js\";\nimport TitleText from \"./Modals/TitleText.js\";\nimport InsertImage from \"./Modals/InsertImage.js\";\n\nclass ModalManager extends React.Component {\n  chooseModal(info) {\n    switch (info) {\n      case \"SuggestedLayout\":\n        return (\n          <SuggestedLayout\n            closeModal={() => this.props.closeModal()}\n            setLayout={a => this.props.setLayout(a)}\n          />\n        );\n\n      case \"ChooseElement\":\n        return (\n          <ChooseElement\n            modalInfo={this.props.modalInfo}\n            selectModal={info => this.props.selectModal(info)}\n            closeModal={() => this.props.closeModal()}\n          />\n        );\n\n      case \"Blocco di testo\":\n        return (\n          <InputText\n            manageColumnElements={info => this.props.manageColumnElements(info)}\n            modalInfo={this.props.modalInfo}\n            selectModal={info => this.props.selectModal(info)}\n            closeModal={() => this.props.closeModal()}\n          />\n        );\n\n      case \"Titolo\":\n        return (\n          <TitleText\n            manageColumnElements={info => this.props.manageColumnElements(info)}\n            modalInfo={this.props.modalInfo}\n            selectModal={info => this.props.selectModal(info)}\n            closeModal={() => this.props.closeModal()}\n          />\n        );\n\n      case \"Immagine\":\n        return (\n          <InsertImage\n            manageColumnElements={info => this.props.manageColumnElements(info)}\n            modalInfo={this.props.modalInfo}\n            selectModal={info => this.props.selectModal(info)}\n            closeModal={() => this.props.closeModal()}\n          />\n        );\n\n      default:\n    }\n  }\n\n  render() {\n    let modal = this.chooseModal(this.props.modalSelected);\n    return (\n      <div>\n        <div className=\"absolute z-30 left-0 bg-gray-800 top-0 opacity-50 w-full h-full\"></div>\n        <div className=\"z-50 absolute p-4 left-0 w-full flex justify-center\">\n          {modal}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ModalManager;\n","export const getProducts = (cb, requestedUrl) => {\n  if (!requestedUrl) {\n    return null;\n  }\n\n  fetch(requestedUrl)\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      cb(jsonData);\n    })\n    .catch(error => {\n      console.error(\"getProductserror:\");\n      console.error(error);\n    });\n};\n\nexport const countItems = array => {\n  return array\n    .map(element => {\n      return parseInt(element.numbers);\n    })\n    .reduce((results, currentValue) => {\n      return results + currentValue;\n    }, 0);\n  //console.log(\"il conteggio è:\" +x);\n};\n\n// Funzione che fa una DeepCopy dell'array\nexport const clone = (target, source) => {\n  for (let key in source) {\n    // Use getOwnPropertyDescriptor instead of source[key] to prevent from triggering setter/getter.\n    let descriptor = Object.getOwnPropertyDescriptor(source, key);\n    //\n    //console.log(\"Ti piace utils?\");\n    //In caso di Obj o elementi vuoti(senza attributi) esco dal for\n    if (!descriptor) {\n      console.log(\"Undefined=morte\");\n      break;\n    }\n    if (descriptor.value instanceof String) {\n      target[key] = new String(descriptor.value);\n    } else if (descriptor.value instanceof Array) {\n      target[key] = clone([], descriptor.value);\n    } else if (descriptor.value instanceof Object) {\n      let prototype = Reflect.getPrototypeOf(descriptor.value);\n      let cloneObject = clone({}, descriptor.value);\n      Reflect.setPrototypeOf(cloneObject, prototype);\n      target[key] = cloneObject;\n    } else {\n      Object.defineProperty(target, key, descriptor);\n    }\n  }\n  let prototype = Reflect.getPrototypeOf(source);\n  Reflect.setPrototypeOf(target, prototype);\n  return target;\n};\n","import React from \"react\";\n/* import SuggestedLayout from \"./SuggestedLayout.js\";\nimport ChooseElement from \"./ChooseElement.js\"; */\nimport Container from \"./Container.js\";\n/* import classNames from \"classnames\"; */\nimport ModalManager from \"./ModalManager.js\";\n//funzione per il DeepCopy\nimport { clone } from \"./utils.js\";\n/* import TitleText from \"./TitleText.js\"; */\n/* import * as R from \"ramda\"; */\n//import { CSSTransition } from \"react-transition-group\";\n\nclass StartingPage extends React.Component {\n  render() {\n    return (\n      <div className=\"mt-2 border-dashed border border-gray-500 p-5\">\n        <div className=\"flex justify-center flex-col items-center font-worksans\">\n          <span className=\"font-bold\">\n            Per iniziare, aggiungere un contenitore o aggiungere una pagina\n            precompilata.\n          </span>\n          <span className=\"text-gray-500 italic text-center text-sm\">\n            Il processo di costruzione inizia sempre con un contenitore, poi\n            colonne, poi elementi.\n          </span>\n          <button\n            onClick={info =>\n              this.props.selectModal({ selectedModal: \"SuggestedLayout\" })\n            }\n            className=\"mt-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n          >\n            + Contenitore\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayChooseLayout: false,\n      displayChooseElement: false,\n      showModal: false,\n      modalSelected: null,\n      container: []\n    };\n  }\n\n  /* ########## GESTIONE CONTENUTO COLONNE ########################### */\n  manageColumnElements(info) {\n    console.log(\n      \"sei passato da manageColumnElements con info:\" + JSON.stringify(info)\n    );\n    let array = clone([], this.state.container);\n    switch (info.operation) {\n      case \"add\":\n        array[info.indexContainer].column[info.indexColonna].context.push(\n          info.value\n        );\n        break;\n      case \"delete\":\n        array[info.indexContainer].column[info.indexColonna].context.splice(\n          info.indexElement,\n          1\n        );\n        break;\n      // swappare elemento colonna\n      case \"swap\":\n        console.log(\"sei nello swap element !\");\n        //controllo Swap per capire se è l'ultimo o il primo elemento\n        if (info.swap === \"before\" && info.indexElement === \"0\") {\n          break;\n        } else if (\n          info.swap === \"after\" &&\n          parseInt(info.indexElement) ===\n            parseInt(\n              array[info.indexContainer].column[info.indexColonna].context\n                .length - 1\n            )\n        ) {\n          break;\n        }\n\n        // inserire condizione di swap\n\n        if (info.swap === \"before\") {\n          [\n            array[info.indexContainer].column[info.indexColonna].context[\n              info.indexElement - 1\n            ],\n            array[info.indexContainer].column[info.indexColonna].context[\n              info.indexElement\n            ]\n          ] = [\n            array[info.indexContainer].column[info.indexColonna].context[\n              info.indexElement\n            ],\n            array[info.indexContainer].column[info.indexColonna].context[\n              info.indexElement - 1\n            ]\n          ];\n        } else if (info.swap === \"after\") {\n          [\n            array[info.indexContainer].column[info.indexColonna].context[\n              info.indexElement\n            ],\n            array[info.indexContainer].column[info.indexColonna].context[\n              parseInt(info.indexElement) + 1\n            ]\n          ] = [\n            array[info.indexContainer].column[info.indexColonna].context[\n              parseInt(info.indexElement) + 1\n            ],\n            array[info.indexContainer].column[info.indexColonna].context[\n              info.indexElement\n            ]\n          ];\n        }\n\n        break;\n      case \"copy\":\n        let item =\n          array[info.indexContainer].column[info.indexColonna].context[\n            info.indexElement\n          ];\n        array[info.indexContainer].column[info.indexColonna].context.splice(\n          info.indexElement,\n          0,\n          item\n        );\n        break;\n      case \"update\":\n        array[info.indexContainer].column[info.indexColonna].context[\n          info.indexElement\n        ] = info.value;\n        break;\n      default:\n    }\n    this.setState({\n      container: array\n    });\n  }\n\n  /* ########## GESTIONE COLONNE ########################### */\n\n  manageColumn(info) {\n    console.log(\"sei passato da manageColumn con info:\" + JSON.stringify(info));\n    let array = [];\n    // DEEP COPY dello state\n    array = clone(array, this.state.container);\n    switch (info.operation) {\n      case \"add\":\n        array[info.indexContainer].column.push({\n          fract: \"1/6\",\n          context: []\n        });\n        break;\n      case \"delete\":\n        array[info.indexContainer].column.splice(info.indexColonna, 1);\n        break;\n      case \"copy\":\n        // ATTENZIONE ! il metodo .slice() fa una copia superficiale,\n        // gli elementi annidati devono essere copiati con R.clone() o Clone()\n        let item = array[info.indexContainer].column[info.indexColonna];\n        array[info.indexContainer].column.splice(info.indexColonna, 0, item);\n        break;\n      case \"update\":\n        array[info.indexContainer].column[info.indexColonna].fract = info.value;\n        break;\n\n      // swappare colonna\n      case \"swap\":\n        console.log(\"sei nello swap !\");\n        //controllo Swap per capire se è l'ultimo o il primo elemento\n        if (info.swap === \"before\" && info.indexColonna === \"0\") {\n          break;\n        } else if (\n          info.swap === \"after\" &&\n          parseInt(info.indexColonna) ===\n            parseInt(array[info.indexContainer].column.length - 1)\n        ) {\n          break;\n        }\n\n        // inserire condizione di swap\n        if (info.swap === \"before\") {\n          [\n            array[info.indexContainer].column[info.indexColonna - 1],\n            array[info.indexContainer].column[info.indexColonna]\n          ] = [\n            array[info.indexContainer].column[info.indexColonna],\n            array[info.indexContainer].column[info.indexColonna - 1]\n          ];\n        } else if (info.swap === \"after\") {\n          [\n            array[info.indexContainer].column[info.indexColonna],\n            array[info.indexContainer].column[parseInt(info.indexColonna) + 1]\n          ] = [\n            array[info.indexContainer].column[parseInt(info.indexColonna) + 1],\n            array[info.indexContainer].column[info.indexColonna]\n          ];\n        }\n        break;\n      default:\n    }\n    this.setState({\n      container: array\n    });\n  }\n\n  /* ########## GESTIONE CONTAINER ########################### */\n\n  // scelto un layout di partenza da un utente creo un container con quel criterio\n  newContainer(layout) {\n    console.log(\"layout selezionato\" + layout);\n    let array = layout.split(\",\");\n    array = array.map(element => {\n      return { fract: element, context: [] };\n    });\n    // Creo un Object per il Container che conterrà un array di Obj per ogni colonna\n    let obj = {\n      column: array,\n      name: \"contenitore\",\n      open: true\n    };\n    let array2 = clone([], this.state.container);\n    array2.push(obj);\n    this.setState({\n      showModal: false,\n      modalSelected: null,\n      modalInfo: null,\n      displayChooseElement: false,\n      container: array2\n    });\n  }\n  manageContainer(info) {\n    console.log(\n      \"sei passato da manageContainer con info:\" + JSON.stringify(info)\n    );\n    // DEEP COPY dello state\n    let array = clone([], this.state.container);\n    switch (info.operation) {\n      case \"delete\":\n        array.splice(info.indexContainer, 1);\n        break;\n      case \"copy\":\n        // ATTENZIONE ! il metodo .slice() fa una copia superficiale,\n        // gli elementi annidati devono essere copiati con R.clone()\n        array.splice(info.indexContainer, 0, array[info.indexContainer]);\n        break;\n      case \"open\":\n        array[info.indexContainer].open = !this.state.container[\n          info.indexContainer\n        ].open;\n        break;\n      case \"update\":\n        // da fare in futuro\n        break;\n      case \"add\":\n        //da fare in futuro\n        break;\n      default:\n    }\n    this.setState({\n      container: array\n    });\n  }\n\n  selectModal(info) {\n    this.setState({\n      showModal: true,\n      modalSelected: info.selectedModal,\n      modalInfo: info.info\n    });\n  }\n  closeModal() {\n    this.setState({\n      showModal: false,\n      modalSelected: null,\n      modalInfo: null\n    });\n  }\n\n  //funzione per renderizzare i container\n  renderContainer() {\n    let contenitore = [];\n    for (let i in this.state.container) {\n      contenitore.push(\n        <Container\n          key={i}\n          manageColumn={info => this.manageColumn(info)}\n          manageContainer={info => this.manageContainer(info)}\n          manageColumnElements={info => this.manageColumnElements(info)}\n          isOpen={this.state.container[i].open}\n          index={i}\n          containerInfo={this.state.container[i]}\n          selectModal={info => this.selectModal(info)}\n        />\n      );\n    }\n    return contenitore;\n  }\n\n  render() {\n    let containers = this.renderContainer();\n    return (\n      <div className=\"p-4 bg-gray-200 h-screen overflow-auto\">\n        {this.state.container.length === 0 ? (\n          <StartingPage selectModal={info => this.selectModal(info)} />\n        ) : null}\n\n        {this.state.showModal ? (\n          <ModalManager\n            modalInfo={this.state.modalInfo}\n            manageColumnElements={info => this.manageColumnElements(info)}\n            selectModal={info => this.selectModal(info)}\n            modalSelected={this.state.modalSelected}\n            closeModal={() => this.closeModal()}\n            setLayout={a => this.newContainer(a)}\n          />\n        ) : null}\n        {containers}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.css\";\nimport \"../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}