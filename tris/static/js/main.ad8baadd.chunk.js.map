{"version":3,"sources":["ResetButton.js","Square.js","utils.js","Clock.js","Board.js","History.js","Game.js","index.js"],"names":["ResetButton","messaggio","this","props","className","onClick","upDateGame","resetFunction","React","Component","Square","getBoxClassName","value","winningSquare","isBoardFull","squares","i","length","Clock","state","date","Date","tickID","setState","boardTick","setInterval","tick","clearInterval","toLocaleTimeString","Board","winPosition","Array","fill","xIsNext","winnerX","winnerO","draw","duration","timeX","timeO","winner","calculateWinner","boardFull","pippo","time","boardtime","countMinute","xtime","otime","lines","pluto","paperino","saveWinPosition","win","newSquares","slice","updateStats","vincitore","a","b","c","handleClick","status","info","isVisualizzato","resetSquares","renderSquare","ClearButton","clear","History","Media","calcolaMedia","Game","map","item","key","array","appoggio","contM","contS","lungArray","Math","floor","push","Match","gioco","clearHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad8baadd.chunk.js","sourcesContent":["import React from \"react\";\n\nclass ResetButton extends React.Component {\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    let messaggio = \"RESET\";\n    if (this.props.messaggio) {\n      messaggio = this.props.messaggio;\n    }\n\n    return (\n      <div>\n        <button className=\"btn-toolset \"\n          onClick={() => {\n            this.props.upDateGame();\n            this.props.resetFunction();\n          }}\n        >\n          {messaggio}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ResetButton;\n","import React from \"react\";\n\nclass Square extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={this.getBoxClassName()}\n\t\t\t\tonClick={() => this.props.onClick()}\n\t\t\t>\n\t\t\t\t{this.props.value}\n\t\t\t</button>\n\t\t);\n\t}\n\n\tgetBoxClassName() {\n\t\tif (this.props.winningSquare) {\n\t\t\treturn \"square winsquare\";\n\t\t}\n\t\treturn \"square\";\n\t}\n}\n\nexport default Square;\n","/*export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [pippo, pluto, paperino] = lines[i];\n\n    if (\n      squares[pippo] === squares[pluto] &&\n      squares[pippo] === squares[paperino] &&\n      squares[pippo]\n    ) {\n     this.saveWinPosition(lines[i]);\n      return squares[pippo];\n    }\n  }\n\n  return null;\n}*/\n\nexport function isBoardFull(squares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] === null) {\n      return false;\n    }\n  }\n  return true;\n}\n\n","import React from \"react\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n    this.tickID = 0;\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n    this.props.boardTick();\n  }\n\n  componentDidMount() {\n    this.tickID = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.tickID);\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Ora esatta: {this.state.date.toLocaleTimeString()}</p>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from \"react\";\nimport ResetButton from \"./ResetButton.js\";\nimport Square from \"./Square.js\";\nimport { isBoardFull } from \"./utils.js\";\nimport Clock from \"./Clock.js\";\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsquares: Array(9).fill(null),\n\t\t\txIsNext: true,\n\t\t\twinnerX: 0,\n\t\t\twinnerO: 0,\n\t\t\tdraw: 0,\n\t\t\tduration: Array(2).fill(0),\n\t\t\ttimeX: Array(2).fill(0),\n\t\t\ttimeO: Array(2).fill(0)\n\t\t};\n\t}\n\t// variabile per il controllo della posizione di vittoria\n\twinPosition = false;\n\n\tupdateStats(squares) {\n\t\t// Mi calcolo l'eventuale vincitore\n\t\tconst winner = this.calculateWinner(squares);\n\t\t// Mi calcolo se la tabella è piena\n\t\tconst boardFull = isBoardFull(squares);\n\n\t\t// Controllo che il vincitore sia X\n\t\tif (winner === \"X\") {\n\t\t\tthis.setState({\n\t\t\t\twinnerX: this.state.winnerX + 1\n\t\t\t});\n\t\t\t// Controllo che il vincitore sia O\n\t\t} else if (winner === \"O\") {\n\t\t\tthis.setState({\n\t\t\t\twinnerO: this.state.winnerO + 1\n\t\t\t});\n\t\t\t// Controllo che sia finita in pareggio\n\t\t} else if (boardFull) {\n\t\t\tlet pippo = {\n\t\t\t\tdraw: this.state.draw + 1\n\t\t\t};\n\t\t\tthis.setState(pippo);\n\t\t}\n\t}\n\n\tcountMinute(time) {\n\t\tif (time[1] >= 60) {\n\t\t\ttime[1] = 0;\n\t\t\ttime[0]++;\n\t\t} else {\n\t\t\ttime[1]++;\n\t\t}\n\t\treturn time;\n\t}\n\n\ttick() {\n\t\tlet boardtime = this.countMinute(this.state.duration);\n\t\tlet xtime = this.state.timeX;\n\t\tlet otime = this.state.timeO;\n\n\t\tthis.setState({\n\t\t\tduration: boardtime\n\t\t});\n\n\t\tif (this.state.xIsNext) {\n\t\t\txtime = this.countMinute(xtime);\n\t\t\tthis.setState({\n\t\t\t\ttimeX: xtime\n\t\t\t});\n\t\t} else if (!this.state.xIsNext) {\n\t\t\totime = this.countMinute(otime);\n\t\t\tthis.setState({\n\t\t\t\ttimeO: otime\n\t\t\t});\n\t\t}\n\t}\n\n\tcalculateWinner(squares) {\n\t\tconst lines = [\n\t\t\t[0, 1, 2],\n\t\t\t[3, 4, 5],\n\t\t\t[6, 7, 8],\n\t\t\t[0, 3, 6],\n\t\t\t[1, 4, 7],\n\t\t\t[2, 5, 8],\n\t\t\t[0, 4, 8],\n\t\t\t[2, 4, 6]\n\t\t];\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst [pippo, pluto, paperino] = lines[i];\n\n\t\t\tif (\n\t\t\t\tsquares[pippo] === squares[pluto] &&\n\t\t\t\tsquares[pippo] === squares[paperino] &&\n\t\t\t\tsquares[pippo]\n\t\t\t) {\n\t\t\t\tthis.saveWinPosition(lines[i]);\n\t\t\t\treturn squares[pippo];\n\t\t\t}\n\t\t}\n\t}\n\n\tsaveWinPosition(win) {\n\t\tthis.winPosition = win;\n\t}\n\n\thandleClick(i) {\n\t\t// Controllo se sono già nello stato di vittoria\n\t\t// oppure se il mio square è già stato cliccato\n\t\tif (this.calculateWinner(this.state.squares) || this.state.squares[i]) {\n\t\t\t// HO UN VINCITORE OPPURE ELEMENTO GIA' PIENO!\n\t\t\treturn;\n\t\t}\n\n\t\t// Mi copio gli squares attuali per aggiornarli\n\t\tconst newSquares = this.state.squares.slice();\n\n\t\t// Aggiorno gli squares attuali con il valore del click\n\t\tnewSquares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\n\t\t// Aggiorno le statistiche in caso di vittoria o pareggio\n\t\tthis.updateStats(newSquares);\n\n\t\t// Aggiorno lo states con i nuovi squares\n\t\tthis.setState({\n\t\t\tsquares: newSquares,\n\t\t\txIsNext: !this.state.xIsNext\n\t\t});\n\t}\n\n\tresetSquares() {\n\t\tconst vincitore = this.calculateWinner(this.state.squares);\n\t\tthis.winPosition = false;\n\t\tthis.setState({\n\t\t\tsquares: Array(9).fill(null),\n\t\t\txIsNext: vincitore && vincitore === \"X\" ? false : true,\n\t\t\tduration: [0, 0],\n\t\t\ttimeO: [0, 0],\n\t\t\ttimeX: [0, 0]\n\t\t});\n\t}\n\n\trenderSquare(i) {\n\t\tlet winningSquare;\n\t\tif (this.winPosition) {\n\t\t\tlet [a, b, c] = this.winPosition;\n\t\t\tif (i === a || i === b || i === c) {\n\t\t\t\twinningSquare = true;\n\t\t\t} else {\n\t\t\t\twinningSquare = false;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<Square\n\t\t\t\twinningSquare={winningSquare}\n\t\t\t\tvalue={this.state.squares[i]}\n\t\t\t\tonClick={() => this.handleClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst vincitore = this.calculateWinner(this.state.squares);\n\t\tconst boardFull = isBoardFull(this.state.squares);\n\t\tconst duration = this.state.duration;\n\n\t\tlet status;\n\t\tlet draw = false;\n\n\t\tif (vincitore) {\n\t\t\t// HO UN VINCITORE\n\t\t\tstatus = \"Winner is:\" + vincitore + \" !\";\n\t\t} else if (boardFull) {\n\t\t\t// PARTITA FINITA IN PAREGGIO!\n\t\t\tstatus = \"Partita in Pareggio!\";\n\t\t\tdraw = true;\n\t\t} else {\n\t\t\t// NON HO UN VINCITORE\n\t\t\tstatus = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n\t\t}\n\t\tconst info = [vincitore, duration, this.state.timeX, this.state.timeO];\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"status\">\n\t\t\t\t\t<h1>{status}</h1>\n\t\t\t\t</div>\n\t\t\t\t{vincitore ? (\n\t\t\t\t\t<ResetButton\n\t\t\t\t\t\tisVisualizzato={vincitore}\n\t\t\t\t\t\tinfo={info}\n\t\t\t\t\t\tupDateGame={() => this.props.upDateGame(info)}\n\t\t\t\t\t\tresetFunction={() => this.resetSquares()}\n\t\t\t\t\t\tmessaggio=\"Congratulazioni ! Un'altra partita?\"\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{draw ? (\n\t\t\t\t\t<ResetButton\n\t\t\t\t\t\tisVisualizzato={draw}\n\t\t\t\t\t\tinfo={info}\n\t\t\t\t\t\tupDateGame={() => this.props.upDateGame(info)}\n\t\t\t\t\t\tresetFunction={() => this.resetSquares()}\n\t\t\t\t\t\tmessaggio=\"Accidenti! Un'altra partita?\"\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"board\">\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{vincitore || draw ? null : <Clock boardTick={() => this.tick()} />}\n\t\t\t\t<div>\n\t\t\t\t\t<table className=\"stat-table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Durata partita: </td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.state.duration[0]}:{this.state.duration[1]}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Vittorie X:</td>\n\t\t\t\t\t\t\t\t<td>{this.state.winnerX}</td>\n\t\t\t\t\t\t\t\t<td>timer</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.state.timeX[0]}:{this.state.timeX[1]}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Vittorie O:</td>\n\t\t\t\t\t\t\t\t<td>{this.state.winnerO}</td>\n\t\t\t\t\t\t\t\t<td>timer</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.state.timeO[0]}:{this.state.timeO[1]}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Pareggi:</td>\n\t\t\t\t\t\t\t\t<td> {this.state.draw}</td>\n\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Board;\n","import React from \"react\";\r\n\r\nclass ClearButton extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn-toolset\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tthis.props.clear();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\tClear History\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass History extends React.Component {\r\n\trender() {\r\n\t\tlet Media;\r\n\t\tMedia = this.calcolaMedia(this.props.Game);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"history\">\r\n\t\t\t\t\t<h3>Game History</h3>\r\n\t\t\t\t\t<table className=\"stat-table statistic\">\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.props.Game.map(item => (\r\n\t\t\t\t\t\t\t\t<tr key={item}>\r\n\t\t\t\t\t\t\t\t\t<td>Partita: {item[4]} </td>\r\n\t\t\t\t\t\t\t\t\t<td>Vincitore:{item[0] ? item[0] : \"DRAW\"} </td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\tDurataPartita: {item[1][0]}:{item[1][1]}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\tX-Time: {item[2][0]}:{item[2][1]}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\tO-Time: {item[3][0]}:{item[3][1]}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\tMedia Partite: {Media[0]}:{Media[1]}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t<ClearButton clear={() => this.props.clear()} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcalcolaMedia(array) {\r\n\t\tif (array.length === 0) {\r\n\t\t\treturn [0, 0];\r\n\t\t}\r\n\t\tlet contM = 0;\r\n\t\tlet contS = 0;\r\n\t\tlet appoggio = 0;\r\n\t\tlet i = 0;\r\n\t\tlet lungArray = array.length;\r\n\t\tlet Media = [];\r\n\r\n\t\tfor (let i = 0; i < lungArray; i++) {\r\n\t\t\tconst pippo = array[i][1][0];\r\n\t\t\tconst pluto = array[i][1][1];\r\n\t\t\tcontM = contM + pippo;\r\n\t\t\tcontS = contS + pluto;\r\n\t\t}\r\n\t\tappoggio = contM * 60 + contS;\r\n\t\tcontS = 0;\r\n\t\tcontM = 0;\r\n\t\twhile (i < appoggio) {\r\n\t\t\ti++;\r\n\t\t\tif (contS >= 60) {\r\n\t\t\t\tcontM++;\r\n\t\t\t\tcontS = 0;\r\n\t\t\t}\r\n\t\t\tcontS++;\r\n\t\t}\r\n\t\tcontM = Math.floor(contM / lungArray);\r\n\t\tcontS = Math.floor(contS / lungArray);\r\n\t\tMedia.push(contM);\r\n\t\tMedia.push(contS);\r\n\t\treturn Media;\r\n\t}\r\n}\r\n\r\nexport default History;\r\n","import React from \"react\";\nimport Board from \"./Board.js\";\nimport History from \"./History.js\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Match: 1,\n      Game: []\n    };\n  }\n\n  upDateGame(info) {\n    let gioco = this.state.Game.slice();\n    info.push(this.state.Match);\n    //let array= [this.state.Match];\n    gioco.push(info);\n    this.setState({\n      Game: gioco,\n      Match: this.state.Match + 1\n    });\n  }\n\n  clearHistory() {\n    this.setState({\n      Match: 1,\n      Game:[]\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board upDateGame={info => this.upDateGame(info)} />\n        </div>\n        <div className=\"game-info\">\n         <History Game={this.state.Game} Match={this.state.Match} clear={()=> this.clearHistory()}/>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Game from \"./Game.js\";\nimport \"./index.css\";\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}